name: ClusterFuzzLite PR fuzzing

on:
  pull_request:
    branches: [ "master" ]
    # Only run when relevant files change (no paths-ignore here)
    paths:
      - 'fuzz/**'
      - '**/*.py'
      - 'requirements*.txt'
      - 'Dockerfile'
      - 'dockerized_labs/**'
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  fuzz:
    name: Build & run fuzzers
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: { sanitizer: [ address ] }

    steps:
      - name: Harden runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1

      - name: Build fuzzers (${{ matrix.sanitizer }})
        uses: google/clusterfuzzlite/actions/build_fuzzers@884713a6c30a92e5e8544c39945cd7cb630abcd1 # v1 pinned
        with:
          language: python
          sanitizer: ${{ matrix.sanitizer }}

      - name: Run fuzzers (${{ matrix.sanitizer }})
        # When a PR doesn't touch fuzz targets, code-change may prune to zero; don't fail PR.
        continue-on-error: true
        uses: google/clusterfuzzlite/actions/run_fuzzers@884713a6c30a92e5e8544c39945cd7cb630abcd1 # v1 pinned
        with:
          fuzz-seconds: 600
          mode: code-change
          sanitizer: ${{ matrix.sanitizer }}
          output-sarif: true

      - name: Collect SARIF
        run: |
          mkdir -p sarif_out
          find "$GITHUB_WORKSPACE" -type f -name '*.sarif' -exec cp {} sarif_out/ \; || true

      - name: Upload SARIF artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: cflite-pr-sarif
          path: sarif_out/
          if-no-files-found: ignore

  upload-sarif:
    name: Upload to code scanning
    needs: fuzz
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write   # write is isolated to this job
    steps:
      - name: Download SARIF
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4 pinned
        with:
          name: cflite-pr-sarif
          path: sarif_in/

      - name: Find SARIF
        id: find
        run: |
          FILE="$(find sarif_in -type f -name '*.sarif' | head -n1 || true)"
          if [ -n "$FILE" ]; then
            echo "sarif=$FILE" >> "$GITHUB_OUTPUT"
          else
            echo "No SARIF found."
          fi

      - name: Upload SARIF
        if: steps.find.outputs.sarif
        uses: github/codeql-action/upload-sarif@3599b3baa15b485a2e49ef411a7a4bb2452e7f93 # v3.30.5
        with:
          sarif_file: ${{ steps.find.outputs.sarif }}
