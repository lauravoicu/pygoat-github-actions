name: Generate hashed requirements

on:
  workflow_dispatch: {}  # to "Run workflow"

permissions:
  contents: read

jobs:
  lock-deps:
    runs-on: ubuntu-latest
    permissions:
      contents: write       # push branch with generated files
      pull-requests: write  # open PR
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.11"

      - name: Install pip-tools
        run: python -m pip install --upgrade pip pip-tools

      - name: Prepare inputs
        id: prep
        shell: bash
        run: |
          set -euo pipefail
          # If you only have requirements.txt, convert it to .in (keep pins you had)
          if [ ! -f requirements.in ] && [ -f requirements.txt ]; then
            cp requirements.txt requirements.in
          fi
          # Ensure the .in files exist (empty is fine to start)
          : > requirements.in
          # Seed dev tools if none yet
          if [ ! -f requirements-dev.in ]; then
            printf "pytest\nflake8\n" > requirements-dev.in
          fi

      - name: Compile pinned + hashed files
        run: |
          pip-compile --generate-hashes --output-file requirements.txt requirements.in
          pip-compile --generate-hashes --output-file requirements-dev.txt requirements-dev.in

      - name: Create branch, commit, and push
        env:
          BRANCH: chore/hash-locked-reqs
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b "$BRANCH"
          git add requirements.in requirements.txt requirements-dev.in requirements-dev.txt
          if git diff --staged --quiet; then
            echo "No changes to commit."
            echo "skip_pr=true" >> "$GITHUB_ENV"
          else
            git commit -m "chore(deps): add hash-locked requirements via pip-tools"
            git push --set-upstream origin "$BRANCH"
          fi

      - name: Open pull request
        if: env.skip_pr != 'true'
        run: |
          gh pr create \
            --title "chore(deps): add hash-locked requirements via pip-tools" \
            --body "Adds requirements.txt and requirements-dev.txt with --require-hashes for reproducible installs." \
            --base master \
            --head chore/hash-locked-reqs
