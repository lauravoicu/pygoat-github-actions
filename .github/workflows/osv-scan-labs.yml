name: OSV scan (labs)

on:
  schedule:
    - cron: "15 3 * * 1"   # Mondays 03:15 UTC
  workflow_dispatch: {}

# Least privilege by default
permissions:
  contents: read

jobs:
  # 1) SARIF to Code Scanning (reusable workflow)
  labs-sarif:
    permissions:
      contents: read
      actions: read
      security-events: write   # only this job uploads SARIF
    uses: google/osv-scanner-action/.github/workflows/osv-scanner-reusable.yml@e92b5d07338d4f0ba0981dffed17c48976ca4730
    with:
      # Scan lab manifests only; don't fail the run on vulns
      scan-args: >-
        --fail-on-vuln=false
        --lockfile dockerized_labs/broken_auth_lab/requirements.txt
        --lockfile dockerized_labs/insec_des_lab/requirements.txt
        --lockfile dockerized_labs/sensitive_data_exposure/requirements.txt

  # 2) JSON artifact for generating ignore TOMLs (step action)
  labs-json:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Run OSV (labs JSON)
        # OSV exits with code 1 when vulns are found; we want the JSON anyway
        continue-on-error: true
        uses: google/osv-scanner-action/osv-scanner-action@e92b5d07338d4f0ba0981dffed17c48976ca4730
        with:
          scan-args: |-
            --format json
            --output osv-labs-results.json
            --lockfile dockerized_labs/broken_auth_lab/requirements.txt
            --lockfile dockerized_labs/insec_des_lab/requirements.txt
            --lockfile dockerized_labs/sensitive_data_exposure/requirements.txt
            .

      - name: Upload JSON
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: osv-labs-results-json
          path: osv-labs-results.json
          if-no-files-found: warn
